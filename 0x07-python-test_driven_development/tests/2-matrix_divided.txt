This module is about dividing a matrix.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
This uses the ``matrix_divided`` function.
===============================================================================

This imports the function so that the computer knows where to doctest.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

===============================================================================
Example of successful division of a matrix.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

===============================================================================
#Failcases
-------------------------------------------------------------------------------
EdgeCase: matrix must be a list of lists of integers or floats,
         otherwise raise a TypeError exception with the message:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
-------------------------------------------------------------------------------

>>> matrix_divided(str, 8)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(None, 8)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided("", 8)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(" ", 8)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

-------------------------------------------------------------------------------
EdgeCase: Each row of the matrix must be of the same size, otherwise raise
a TypeError exception with the message:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
-------------------------------------------------------------------------------

>>> matrix_divided([[8], [8, 8], [8, 8, 8]], 8)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[8], [8, 8]], 8)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[], [8, 8], [8, 8, 8]], 8)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

-------------------------------------------------------------------------------
EdgeCase: div must be a number (integer or float), otherwise raise a TypeError
exception with the message:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Traceback (most recent call last):
TypeError: div must be a number
-------------------------------------------------------------------------------

>>> matrix_divided(matrix, "")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[8, 8, 8], [8, 8, 8], [8, 8, 8]], [8])
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[8, 8, 8], [8, 8, 8], [8, 8, 8]], None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[8, 8, 8], [8, 8, 8], [8, 8, 8]], "hello")
Traceback (most recent call last):
TypeError: div must be a number

-------------------------------------------------------------------------------
EdgeCase: div canâ€™t be equal to 0, otherwise raise a ZeroDivisionError
exception with the message:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Traceback (most recent call last):
TypeError: division by zero
-------------------------------------------------------------------------------

>>> matrix_divided([8, 8, 8], [8, 8, 8], [8, 8, 8], 0)
Traceback (most recent call last):
TypeError: division by zero

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
TypeError: division by zero

-------------------------------------------------------------------------------
